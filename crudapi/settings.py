"""
Django settings for crudapi project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""
# from django.urls import reverse
import os
from django.core.mail.backends.filebased import EmailBackend
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
import dj_database_url
import datetime


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wtouj#(&=4_x)z_7#lu9qfuz04jy#&q-k!_jb=fs9ehg68h1!$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users.apps.CrudConfig',
    'ngApp.apps.AppConfig',
    # 'debug_toolbar',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'api',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'jinja2'

]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

]
INTERNAL_IPS = ('*',)

ROOT_URLCONF = 'crudapi.urls'

TEMPLATES = [

    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.media',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
    {
            'BACKEND': 'django.template.backends.jinja2.Jinja2',
            'DIRS': 'users',
            'APP_DIRS': True,
            'OPTIONS': {
                'environment': 'crudapi.jinja2_bridge.environment',
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.template.context_processors.media',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
    },
]

WSGI_APPLICATION = 'crudapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'postgres',
    #     'USER': 'postgres',
    #     'PASSWORD': 'postgres',
    #     'PORT': '5432',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

REST_USE_JWT = True
JWT_ALLOW_REFRESH = False
JWT_EXPIRATION_DELTA = datetime.timedelta(seconds=300000000)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # During development only
EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
EMAIL_FILE_PATH = os.path.join(BASE_DIR,'sent_emails')


SITE_ID = 1
LOGIN_URL = 'app:app_index'
LOGIN_REDIRECT_URL = 'app:app_index'
LOGOUT_REDIRECT_URL = 'app:app_index'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 1025


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
            'rest_framework_simplejwt.authentication.JWTAuthentication',
            'rest_framework.authentication.BasicAuthentication',

    ],

    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ]
}

DEFAULT_AUTO_FIELD="django.db.models.AutoField"

# ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = False

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'api.serializers.MyRegisterSerializer'
}

REST_AUTH_SERIALIZERS = {
    'PASSWORD_RESET_SERIALIZER': 'api.serializers.ResetPasswordSerializer'
}

ACCOUNT_AUTHENTICATION_METHOD = 'username_email'

DEFAULT_FROM_EMAIL = 'admin@crud.com'

ACCOUNT_CONFIRM_EMAIL_ON_GET = True

ACCOUNT_USERNAME_REQUIRED =  True

ACCOUNT_EMAIL_REQUIRED =  True

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))


STATIC_URL = '/static/'

MEDIA_ROOT = "media"
MEDIA_URL = '/media/'

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'local_statics'),
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

db_from_env = dj_database_url.config(conn_max_age=500)

DATABASES['default'].update(db_from_env)

